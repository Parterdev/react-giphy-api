{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","index","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMhB,SAEE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAtBoB,SAACP,GACzB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,S,+BCNHG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACsCC,UAAUH,GADhD,+DAEEI,MAAMF,GAFR,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAcdM,GAdc,4CAAH,sDCDTO,EAAc,SAAC,GAAsB,IAArBH,EAAoB,EAApBA,MAAWV,GAAS,EAAbS,GAAa,EAATT,KAEtC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAuB,IAAtBnB,EAAqB,EAArBA,SAAUoB,EAAW,EAAXA,MAAW,ECDlB,SAACpB,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WACRzB,EAAQC,GACLyB,MAAK,SAAAC,GACJC,YAAW,WACTJ,EAAS,CACThB,KAAMmB,EACNL,SAAS,MAER,WAEN,CAACrB,IAEGsB,EDhBwBM,CAAa5B,GAAhCa,EAFgC,EAErCN,KAAac,EAFwB,EAExBA,QAEpB,OACE,qCACE,oBAAIL,UAAU,oCAAd,SAAmDI,EAAQ,IAAMpB,IAC/DqB,GAAW,mBAAGL,UAAU,oCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEZZkB,EAAe,WAAM,MAGI3C,mBAAS,CAAC,2BAHd,mBAGzB4C,EAHyB,KAGb7C,EAHa,KAKhC,OACE,gCACE,+CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI6C,EAAWrB,KAAI,SAACT,EAAUoB,GAAX,OACb,cAAC,EAAD,CAEEA,MAAOA,EAAM,EACbpB,SAAUA,GAFLA,Y,MCfnB+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.56aa861e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"Submited\", e);\r\n    if(inputValue.trim().length > 2) {\r\n      //Insertion\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    {/* <h1>{inputValue}</h1> */}\r\n      <input \r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>  \r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n//Http request logic\r\n  export const getGifs = async (category) => {\r\n    const url    =   `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=NbDqZ4SLWcwxJX1FVNhUkFXXyr00FyZM`;\r\n    const resp   =   await fetch(url);\r\n    const {data} =   await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    });\r\n\r\n    //console.log(gifs);\r\n    return gifs;\r\n  }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, id, url}) => {\r\n  //console.log(title)\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category, index}) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{index + '.' + category}</h3>\r\n      { loading && <p className=\"animate__animated animate__shakeX\">Cargando...</p> }\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map((img) => \r\n              <GifGridItem \r\n                key={img.id}\r\n                {...img}\r\n              />\r\n            )\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        setTimeout(() => {\r\n          setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n        }, 1500);\r\n      })\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n} ","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['Caballeros del Zodiaco']);\r\n\r\n  return (\r\n    <div>\r\n      <h2>GiftExpertApp</h2>\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        {\r\n          categories.map((category, index) =>  \r\n            <GifGrid\r\n              key={category} \r\n              index={index+1}\r\n              category={category} \r\n            />\r\n          )\r\n        }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}